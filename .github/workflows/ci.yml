name: CI - Build and Test

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        default: '20'
        type: string
      python-version:
        description: 'Python version to use'
        required: false
        default: '3.13'
        type: string
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version || '3.13' }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      working-directory: ./backend
      run: uv sync --extra dev

    - name: Run migrations
      working-directory: ./backend
      run: uv run python manage.py migrate

    - name: Run tests
      working-directory: ./backend
      run: uv run python manage.py test

    - name: Check Django deployment readiness
      working-directory: ./backend
      run: uv run python manage.py check --deploy

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version || '20' }}

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      working-directory: ./frontend
      run: pnpm install --frozen-lockfile

    - name: Build frontend
      working-directory: ./frontend
      run: pnpm run build

    # - name: Run tests
    #   working-directory: ./frontend
    #   run: pnpm run test

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker Compose
      uses: docker/setup-compose-action@v1

    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        tags: rhombus-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: false
        tags: rhombus-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test docker compose build
      run: docker compose build
